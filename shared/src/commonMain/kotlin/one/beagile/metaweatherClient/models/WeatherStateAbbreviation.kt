/**
 * metaweather
 *
 * metaweather.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package one.beagile.metaweatherClient.models


import kotlinx.serialization.*

/**
 * 
 *
 * Values: sn,sl,h,t,hr,lr,s,hc,lc,c
 */
@Serializable
enum class WeatherStateAbbreviation(val value: kotlin.String) {

    @SerialName(value = "sn")
    sn("sn"),

    @SerialName(value = "sl")
    sl("sl"),

    @SerialName(value = "h")
    h("h"),

    @SerialName(value = "t")
    t("t"),

    @SerialName(value = "hr")
    hr("hr"),

    @SerialName(value = "lr")
    lr("lr"),

    @SerialName(value = "s")
    s("s"),

    @SerialName(value = "hc")
    hc("hc"),

    @SerialName(value = "lc")
    lc("lc"),

    @SerialName(value = "c")
    c("c");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: Any?): kotlin.String? = if (data is WeatherStateAbbreviation) "$data" else null

        /**
         * Returns a valid [WeatherStateAbbreviation] for [data], null otherwise.
         */
        fun decode(data: Any?): WeatherStateAbbreviation? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

